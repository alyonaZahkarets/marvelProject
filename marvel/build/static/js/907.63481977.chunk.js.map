{"version":3,"file":"static/js/907.63481977.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import img from \"./error.gif\";\n\nconst ErrorMessage = () => {\n  return (\n    <img\n      style={{\n        display: \"block\",\n        width: \"250px\",\n        height: \"250px\",\n        objectFit: \"contain\",\n        margin: \"0 auto\",\n      }}\n      src={img}\n      alt=\"Error\"\n    />\n  );\n};\n\nexport default ErrorMessage;\n","import \"./appBanner.scss\";\nimport avengers from \"../../resources/img/Avengers.png\";\nimport avengersLogo from \"../../resources/img/Avengers_logo.png\";\n\nconst AppBanner = () => {\n  return (\n    <div className=\"app__banner\">\n      <img src={avengers} alt=\"Avengers\" />\n      <div className=\"app__banner-text\">\n        New comics every week!\n        <br />\n        Stay tuned!\n      </div>\n      <img src={avengersLogo} alt=\"Avengers logo\" />\n    </div>\n  );\n};\n\nexport default AppBanner;\n","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nimport \"./comicsList.scss\";\n\nconst ComicsList = (props) => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { loading, error, getAllComics } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n    // eslint-disable-next-line\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllComics(offset).then(onComicsListLoaded);\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n\n    setComicsList((comicsList) => [...comicsList, ...newComicsList]);\n    setNewItemLoading((newItemLoading) => false);\n    setOffset(offset + 8);\n    setComicsEnded((comicsEnded) => ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link to={`/comics/${item.id}`}>\n            <img\n              src={item.thumbnail}\n              alt={item.title}\n              className=\"comics__item-img\"\n            />\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      );\n    });\n    return <ul className=\"comics__grid\">{items}</ul>;\n  }\n\n  const items = renderItems(comicsList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"comics__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import AppBanner from \"../appBanner/AppBanner\";\nimport ComicsList from \"../comicsList/ComicsList\";\n\nconst ComicsPage = () => {\n  return (\n    <>\n      <AppBanner />\n      <ComicsList />\n    </>\n  );\n};\nexport default ComicsPage;\n","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(\n    async (\n      url,\n      method = \"GET\",\n      body = null,\n      headers = { \"Content-Type\": \"application/json\" }\n    ) => {\n      setLoading(true);\n\n      try {\n        const response = await fetch(url, { method, body, headers });\n        if (!response.ok) {\n          throw new Error(`Could not fetch ${url}, status ${response.status}`);\n        }\n        const data = await response.json();\n\n        setLoading(false);\n        return data;\n      } catch (err) {\n        setLoading(false);\n        setError(err.message);\n        throw err;\n      }\n    },\n    []\n  );\n  const clearError = useCallback(() => setError(null), []);\n  return { request, loading, error, clearError };\n};\n","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n  const { loading, request, error, clearError } = useHttp();\n\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n  const _apiKey = \"apikey=35e2adbc5d03d90ded013921723230bb\";\n  const _baseOffset = 210;\n\n  const getAllCharacters = async (offset = _baseOffset) => {\n    const res = await request(\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async (id) => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const getAllComics = async (offset = 0) => {\n    const res = await request(\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformComic);\n  };\n\n  const getComic = async (id) => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n    return _transformComic(res.data.results[0]);\n  };\n\n  const _transformCharacter = (char) => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description,\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items,\n    };\n  };\n  const _transformComic = (comics) => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || \"There is no description\",\n      pageCount: comics.pageCount\n        ? `${comics.pageCount} p.`\n        : \"No information about the number of pages\",\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n      language: comics.textObjects[0]?.language || \"en-us\",\n      price: comics.prices[0].price\n        ? `${comics.prices[0].price}$`\n        : \"not available\",\n    };\n  };\n\n  return {\n    getAllCharacters,\n    getCharacter,\n    getAllComics,\n    getComic,\n    loading,\n    error,\n    clearError,\n  };\n};\n\nexport default useMarvelService;\n"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","AppBanner","_jsxs","className","children","avengers","avengersLogo","props","comicsList","setComicsList","useState","newItemLoading","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","loading","error","getAllComics","useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","items","arr","map","item","i","Link","to","concat","id","thumbnail","title","price","renderItems","errorMessage","spinner","Spinner","disabled","onClick","ComicsPage","_Fragment","ComicsList","request","clearError","useHttp","setLoading","setError","useCallback","async","url","method","arguments","undefined","body","headers","response","fetch","ok","Error","status","data","json","err","message","_apiBase","_apiKey","_transformCharacter","char","name","description","path","extension","homepage","urls","wiki","comics","_transformComic","_comics$textObjects$","pageCount","language","textObjects","prices","getAllCharacters","results","getCharacter","res","getComic"],"sourceRoot":""}
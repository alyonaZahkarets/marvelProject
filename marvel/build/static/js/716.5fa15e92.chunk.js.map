{"version":3,"file":"static/js/716.5fa15e92.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/pages/SingleComicPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import img from \"./error.gif\";\n\nconst ErrorMessage = () => {\n  return (\n    <img\n      style={{\n        display: \"block\",\n        width: \"250px\",\n        height: \"250px\",\n        objectFit: \"contain\",\n        margin: \"0 auto\",\n      }}\n      src={img}\n      alt=\"Error\"\n    />\n  );\n};\n\nexport default ErrorMessage;\n","import { useParams, Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport \"./singleComicPage.scss\";\n\nconst SingleComicPage = () => {\n  const { comicId } = useParams();\n  const [comic, setComic] = useState(null);\n  const { loading, error, getComic, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateComic();\n    // eslint-disable-next-line\n  }, [comicId]);\n\n  const updateComic = () => {\n    clearError();\n    getComic(comicId).then(onComicLoaded);\n  };\n\n  const onComicLoaded = (comic) => {\n    setComic(comic);\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !comic) ? <View comic={comic} /> : null;\n\n  return (\n    <>\n      {errorMessage}\n      {spinner}\n      {content}\n    </>\n  );\n};\n\nconst View = ({ comic }) => {\n  const { title, description, pageCount, language, price, thumbnail } = comic;\n\n  return (\n    <div className=\"single-comic\">\n      <img src={thumbnail} alt={title} className=\"single-comic__img\" />\n      <div className=\"single-comic__info\">\n        <h2 className=\"single-comic__name\">{title}</h2>\n        <p className=\"single-comic__descr\">{description}</p>\n        <p className=\"single-comic__descr\">{pageCount}</p>\n        <p className=\"single-comic__descr\">{language}</p>\n        <div className=\"single-comic__price\">{price}</div>\n      </div>\n      <Link to=\"/comics\" className=\"single-comic__back\">\n        Back to all\n      </Link>\n    </div>\n  );\n};\n\nexport default SingleComicPage;\n","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(\n    async (\n      url,\n      method = \"GET\",\n      body = null,\n      headers = { \"Content-Type\": \"application/json\" }\n    ) => {\n      setLoading(true);\n\n      try {\n        const response = await fetch(url, { method, body, headers });\n        if (!response.ok) {\n          throw new Error(`Could not fetch ${url}, status ${response.status}`);\n        }\n        const data = await response.json();\n\n        setLoading(false);\n        return data;\n      } catch (err) {\n        setLoading(false);\n        setError(err.message);\n        throw err;\n      }\n    },\n    []\n  );\n  const clearError = useCallback(() => setError(null), []);\n  return { request, loading, error, clearError };\n};\n","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n  const { loading, request, error, clearError } = useHttp();\n\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n  const _apiKey = \"apikey=35e2adbc5d03d90ded013921723230bb\";\n  const _baseOffset = 210;\n\n  const getAllCharacters = async (offset = _baseOffset) => {\n    const res = await request(\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async (id) => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const getAllComics = async (offset = 0) => {\n    const res = await request(\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformComic);\n  };\n\n  const getComic = async (id) => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n    return _transformComic(res.data.results[0]);\n  };\n\n  const _transformCharacter = (char) => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description,\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items,\n    };\n  };\n  const _transformComic = (comics) => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || \"There is no description\",\n      pageCount: comics.pageCount\n        ? `${comics.pageCount} p.`\n        : \"No information about the number of pages\",\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n      language: comics.textObjects[0]?.language || \"en-us\",\n      price: comics.prices[0].price\n        ? `${comics.prices[0].price}$`\n        : \"not available\",\n    };\n  };\n\n  return {\n    getAllCharacters,\n    getCharacter,\n    getAllComics,\n    getComic,\n    loading,\n    error,\n    clearError,\n  };\n};\n\nexport default useMarvelService;\n"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","View","_ref","comic","title","description","pageCount","language","price","thumbnail","_jsxs","className","children","Link","to","SingleComicPage","comicId","useParams","setComic","useState","loading","error","getComic","clearError","useMarvelService","useEffect","updateComic","then","onComicLoaded","errorMessage","spinner","Spinner","content","_Fragment","request","useHttp","setLoading","setError","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","concat","status","data","json","err","message","_apiBase","_apiKey","_transformCharacter","char","id","name","path","extension","homepage","urls","wiki","comics","items","_transformComic","_comics$textObjects$","textObjects","prices","getAllCharacters","offset","results","map","getCharacter","res","getAllComics"],"sourceRoot":""}